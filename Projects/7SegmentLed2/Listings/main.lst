C51 COMPILER V9.60.0.0   MAIN                                                              10/30/2023 14:58:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          unsigned char code SEVEN_SEGMENT_LED_ANODE_CODES[] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80
             -, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E};
   4          unsigned char code SEVEN_SEGMENT_LED_CATHODE_CODES[]  = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0
             -x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71};
   5          
   6          void display(unsigned char number, unsigned int t_ms)
   7          {
   8   1        unsigned char display_number = number % 100;  // Make sure 2 digits number
   9   1        unsigned char display_number_1 = display_number / 10;
  10   1        unsigned char display_number_0 = display_number % 10;
  11   1        
  12   1        unsigned int x;
  13   1        for(x = 0; x < t_ms/2; x++)
  14   1        {
  15   2          // Display display_number_1
  16   2          COUNT_PORT = SEVEN_SEGMENT_LED_ANODE_CODES[display_number_1];
  17   2          COUNT_1_PIN = HIGH;
  18   2          delay_ms(1);
  19   2          COUNT_1_PIN = LOW;
  20   2          // Display display_number_0
  21   2          COUNT_PORT = SEVEN_SEGMENT_LED_ANODE_CODES[display_number_0];
  22   2          COUNT_0_PIN = HIGH;
  23   2          delay_ms(1);
  24   2          COUNT_0_PIN = LOW;
  25   2        }
  26   1      }
  27          
  28          unsigned char t_to_count_s[3] = {20, 10, 15};
  29          unsigned char traffic_led_index;  // 0 RED, 1 YELLOW, 2 BLUE
  30          
  31          void setup()
  32          {
  33   1        // setup code here, to run once:
  34   1        GREEN_LED_PIN = HIGH;   // Active Low
  35   1        YELLOW_LED_PIN = HIGH;  // Active Low
  36   1        RED_LED_PIN = HIGH;     // Active Low
  37   1        COUNT_1_PIN = LOW;      // Active High - NPN
  38   1        COUNT_0_PIN = LOW;      // Active High - NPN
  39   1        COUNT_PORT = 0x00;
  40   1        traffic_led_index = 0;
  41   1      }
  42          
  43          void loop()
  44          {
  45   1        char count_s;
  46   1        if(traffic_led_index == 0)
  47   1          GREEN_LED_PIN = LOW;
  48   1        else if (traffic_led_index == 1)
  49   1          YELLOW_LED_PIN = LOW;
  50   1        else if (traffic_led_index == 2)
  51   1          RED_LED_PIN = LOW;
  52   1        for(count_s = t_to_count_s[traffic_led_index]; count_s >= 0; count_s--)
C51 COMPILER V9.60.0.0   MAIN                                                              10/30/2023 14:58:57 PAGE 2   

  53   1        {
  54   2          display(count_s, 1000);
  55   2        }
  56   1        traffic_led_index++;
  57   1        if(traffic_led_index >= 3)
  58   1        {
  59   2          traffic_led_index = 0;
  60   2        }
  61   1        GREEN_LED_PIN = YELLOW_LED_PIN = RED_LED_PIN = HIGH;
  62   1      }
  63          
  64          void main()
  65          {
  66   1        setup();
  67   1        while(1)
  68   1        {
  69   2          loop();
  70   2        }
  71   1      }
  72          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    206    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
