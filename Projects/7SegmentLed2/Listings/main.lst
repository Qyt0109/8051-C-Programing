C51 COMPILER V9.60.0.0   MAIN                                                              11/12/2023 00:05:53 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          byte code SEVEN_SEGMENT_LED_ANODE_CODES[] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90, 0
             -x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E};
   4          
   5          void display(unsigned char number, unsigned int t_ms)
   6          {
   7   1        unsigned char display_number = number % 100;  // Make sure 2 digits number
   8   1        unsigned char display_number_1 = display_number / 10;
   9   1        unsigned char display_number_0 = display_number % 10;
  10   1        
  11   1        unsigned int x;
  12   1        for(x = 0; x < t_ms/2; x++)
  13   1        {
  14   2          // Display display_number_1
  15   2          COUNT_PORT = SEVEN_SEGMENT_LED_ANODE_CODES[display_number_1];
  16   2          COUNT_1_PIN = HIGH;
  17   2          delay_ms(1);
  18   2          COUNT_1_PIN = LOW;
  19   2          // Display display_number_0
  20   2          COUNT_PORT = SEVEN_SEGMENT_LED_ANODE_CODES[display_number_0];
  21   2          COUNT_0_PIN = HIGH;
  22   2          delay_ms(1);
  23   2          COUNT_0_PIN = LOW;
  24   2        }
  25   1      }
  26          
  27          unsigned char t_to_count_s[3] = {20, 10, 15};
  28          unsigned char traffic_led_index;  // 0 RED, 1 YELLOW, 2 BLUE
  29          
  30          void setup()
  31          {
  32   1        // setup code here, to run once:
  33   1        GREEN_LED_PIN = HIGH;   // Active Low
  34   1        YELLOW_LED_PIN = HIGH;  // Active Low
  35   1        RED_LED_PIN = HIGH;     // Active Low
  36   1        COUNT_1_PIN = LOW;      // Active High - NPN
  37   1        COUNT_0_PIN = LOW;      // Active High - NPN
  38   1        COUNT_PORT = 0x00;
  39   1        traffic_led_index = 0;
  40   1      }
  41          
  42          void loop()
  43          {
  44   1        char count_s;
  45   1        if(traffic_led_index == 0)
  46   1          GREEN_LED_PIN = LOW;
  47   1        else if (traffic_led_index == 1)
  48   1          YELLOW_LED_PIN = LOW;
  49   1        else if (traffic_led_index == 2)
  50   1          RED_LED_PIN = LOW;
  51   1        for(count_s = t_to_count_s[traffic_led_index]; count_s >= 0; count_s--)
  52   1        {
  53   2          display(count_s, 1000);
C51 COMPILER V9.60.0.0   MAIN                                                              11/12/2023 00:05:53 PAGE 2   

  54   2        }
  55   1        traffic_led_index++;
  56   1        if(traffic_led_index >= 3)
  57   1        {
  58   2          traffic_led_index = 0;
  59   2        }
  60   1        GREEN_LED_PIN = YELLOW_LED_PIN = RED_LED_PIN = HIGH;
  61   1      }
  62          
  63          void main()
  64          {
  65   1        setup();
  66   1        while(TRUE)
  67   1        {
  68   2          loop();
  69   2        }
  70   1      }
  71          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    206    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
