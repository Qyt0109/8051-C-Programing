C51 COMPILER V9.60.0.0   MAIN                                                              11/12/2023 00:04:35 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          byte code SEVEN_SEGMENT_LED_ANODE_CODES[] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90, 0
             -x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E};
   4          
   5          // Check button pressed inside 7 segment led sweep
   6          
   7          void setup()
   8          {
   9   1        // setup code here, to run once:
  10   1        CONTINUE_PAUSE_BUTTON = LOW;// Active HIGH
  11   1        START_STOP_BUTTON = LOW;    // Active HIGH
  12   1        SEVEN_SEGMENT_LED_CONTROL_PIN_1 = LOW;  // Active HIGH
  13   1        SEVEN_SEGMENT_LED_CONTROL_PIN_0 = LOW;  // Active HIGH
  14   1        GREEN_LED_PIN = HIGH;   // Active LOW
  15   1        YELLOW_LED_PIN = HIGH;  // Active LOW
  16   1      }
  17          
  18          bit IS_PAUSE = TRUE;
  19          bit IS_STOP = TRUE;
  20          
  21          
  22          void checkStartStopButtonToToggleIsStop()
  23          {
  24   1        if(START_STOP_BUTTON == HIGH)
  25   1        {
  26   2          delay_ms(20);
  27   2          START_STOP_BUTTON = LOW;
  28   2          if(START_STOP_BUTTON == HIGH)
  29   2          {
  30   3            IS_STOP = !IS_STOP;
  31   3            while(START_STOP_BUTTON == HIGH)
  32   3            {
  33   4              // Wait for the button to be released...
  34   4            }
  35   3          }
  36   2        }
  37   1      }
  38          
  39          void checkContinuePauseButtonToToggleIsPause()
  40          {
  41   1        if(CONTINUE_PAUSE_BUTTON == HIGH)
  42   1        {
  43   2          delay_ms(20);
  44   2          CONTINUE_PAUSE_BUTTON = LOW;
  45   2          if(CONTINUE_PAUSE_BUTTON == HIGH)
  46   2          {
  47   3            IS_PAUSE = !IS_PAUSE;
  48   3            while(CONTINUE_PAUSE_BUTTON == HIGH)
  49   3            {
  50   4              // Wait for the button to be released...
  51   4            }
  52   3          }
  53   2        }
C51 COMPILER V9.60.0.0   MAIN                                                              11/12/2023 00:04:35 PAGE 2   

  54   1      }
  55          
  56          unsigned char display_number = 0;
  57          
  58          #define T_LED_SWEEP_DELAY_MS 1
  59          #define T_TO_DISPLAY_EACH_MS 1000
  60          void fastDisplay(unsigned number)
  61          {
  62   1        SEVEN_SEGMENT_LED_DATA_PORT = SEVEN_SEGMENT_LED_ANODE_CODES[(number % 100) / 10];
  63   1        SEVEN_SEGMENT_LED_CONTROL_PIN_1 = HIGH;
  64   1        delay_ms(T_LED_SWEEP_DELAY_MS);
  65   1        SEVEN_SEGMENT_LED_CONTROL_PIN_1 = LOW;
  66   1        SEVEN_SEGMENT_LED_DATA_PORT = SEVEN_SEGMENT_LED_ANODE_CODES[(number % 100) % 10];
  67   1        SEVEN_SEGMENT_LED_CONTROL_PIN_0 = HIGH;
  68   1        delay_ms(T_LED_SWEEP_DELAY_MS);
  69   1        SEVEN_SEGMENT_LED_CONTROL_PIN_0 = LOW;
  70   1      }
  71          
  72          void setStatusLed()
  73          {
  74   1        GREEN_LED_PIN = IS_STOP;
  75   1        YELLOW_LED_PIN = !IS_PAUSE || IS_STOP;
  76   1      }
  77          
  78          void loop()
  79          {
  80   1        // code section to run repeatedly:
  81   1        setStatusLed();
  82   1        checkStartStopButtonToToggleIsStop();
  83   1        while(IS_STOP == FALSE)
  84   1        {
  85   2          {
  86   3            unsigned int x;
  87   3            for(x = 0; x < T_TO_DISPLAY_EACH_MS/(T_LED_SWEEP_DELAY_MS * 2) && IS_STOP == FALSE; x++)
  88   3            {
  89   4              fastDisplay(display_number);
  90   4              checkStartStopButtonToToggleIsStop();
  91   4              checkContinuePauseButtonToToggleIsPause();
  92   4              setStatusLed();
  93   4            }
  94   3          }
  95   2          if(IS_PAUSE == FALSE)
  96   2          {
  97   3            display_number++;
  98   3          }
  99   2        }
 100   1        // RESET
 101   1        display_number = 0;
 102   1        IS_PAUSE = TRUE;
 103   1      }
 104          
 105          void main()
 106          {
 107   1        setup();
 108   1        while(TRUE)
 109   1        {
 110   2          loop();
 111   2        }
 112   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.60.0.0   MAIN                                                              11/12/2023 00:04:35 PAGE 3   

   CODE SIZE        =    242    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
