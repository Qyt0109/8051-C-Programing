C51 COMPILER V9.60.0.0   MAIN                                                              10/30/2023 16:56:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          
   3          unsigned char code SEVEN_SEGMENT_LED_ANODE_CODES[] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80
             -, 0x90, 0x88, 0x83, 0xC6, 0xA1, 0x86, 0x8E};
   4          unsigned char code SEVEN_SEGMENT_LED_CATHODE_CODES[]  = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0
             -x7F, 0x6F, 0x77, 0x7C, 0x39, 0x5E, 0x79, 0x71};
   5          
   6          // Check button pressed inside 7 segment led sweep
   7          
   8          void setup()
   9          {
  10   1        // setup code here, to run once:
  11   1        CONTINUE_PAUSE_BUTTON = LOW;// Active HIGH
  12   1        START_STOP_BUTTON = LOW;    // Active HIGH
  13   1        SEVEN_SEGMENT_LED_CONTROL_PIN_1 = LOW;  // Active HIGH
  14   1        SEVEN_SEGMENT_LED_CONTROL_PIN_0 = LOW;  // Active HIGH
  15   1        GREEN_LED_PIN = HIGH;   // Active LOW
  16   1        YELLOW_LED_PIN = HIGH;  // Active LOW
  17   1      }
  18          
  19          bit IS_PAUSE = TRUE;
  20          bit IS_STOP = TRUE;
  21          
  22          
  23          void checkStartStopButtonToToggleIsStop()
  24          {
  25   1        if(START_STOP_BUTTON == HIGH)
  26   1        {
  27   2          delay_ms(20);
  28   2          START_STOP_BUTTON = LOW;
  29   2          if(START_STOP_BUTTON == HIGH)
  30   2          {
  31   3            IS_STOP = !IS_STOP;
  32   3            while(START_STOP_BUTTON == HIGH)
  33   3            {
  34   4              // Wait for the button to be released...
  35   4            }
  36   3          }
  37   2        }
  38   1      }
  39          
  40          void checkContinuePauseButtonToToggleIsPause()
  41          {
  42   1        if(CONTINUE_PAUSE_BUTTON == HIGH)
  43   1        {
  44   2          delay_ms(20);
  45   2          CONTINUE_PAUSE_BUTTON = LOW;
  46   2          if(CONTINUE_PAUSE_BUTTON == HIGH)
  47   2          {
  48   3            IS_PAUSE = !IS_PAUSE;
  49   3            while(CONTINUE_PAUSE_BUTTON == HIGH)
  50   3            {
  51   4              // Wait for the button to be released...
  52   4            }
C51 COMPILER V9.60.0.0   MAIN                                                              10/30/2023 16:56:50 PAGE 2   

  53   3          }
  54   2        }
  55   1      }
  56          
  57          unsigned char display_number = 0;
  58          
  59          #define T_LED_SWEEP_DELAY_MS 1
  60          #define T_TO_DISPLAY_EACH_MS 1000
  61          void fastDisplay(unsigned number)
  62          {
  63   1        SEVEN_SEGMENT_LED_DATA_PORT = SEVEN_SEGMENT_LED_ANODE_CODES[(number % 100) / 10];
  64   1        SEVEN_SEGMENT_LED_CONTROL_PIN_1 = HIGH;
  65   1        delay_ms(T_LED_SWEEP_DELAY_MS);
  66   1        SEVEN_SEGMENT_LED_CONTROL_PIN_1 = LOW;
  67   1        SEVEN_SEGMENT_LED_DATA_PORT = SEVEN_SEGMENT_LED_ANODE_CODES[(number % 100) % 10];
  68   1        SEVEN_SEGMENT_LED_CONTROL_PIN_0 = HIGH;
  69   1        delay_ms(T_LED_SWEEP_DELAY_MS);
  70   1        SEVEN_SEGMENT_LED_CONTROL_PIN_0 = LOW;
  71   1      }
  72          
  73          void setStatusLed()
  74          {
  75   1        GREEN_LED_PIN = IS_STOP;
  76   1        YELLOW_LED_PIN = !IS_PAUSE || IS_STOP;
  77   1      }
  78          
  79          void loop()
  80          {
  81   1        // code section to run repeatedly:
  82   1        setStatusLed();
  83   1        checkStartStopButtonToToggleIsStop();
  84   1        while(IS_STOP == FALSE)
  85   1        {
  86   2          {
  87   3            unsigned int x;
  88   3            for(x = 0; x < T_TO_DISPLAY_EACH_MS/(T_LED_SWEEP_DELAY_MS * 2) && IS_STOP == FALSE; x++)
  89   3            {
  90   4              fastDisplay(display_number);
  91   4              checkStartStopButtonToToggleIsStop();
  92   4              checkContinuePauseButtonToToggleIsPause();
  93   4              setStatusLed();
  94   4            }
  95   3          }
  96   2          if(IS_PAUSE == FALSE)
  97   2          {
  98   3            display_number++;
  99   3          }
 100   2        }
 101   1        // RESET
 102   1        display_number = 0;
 103   1        IS_PAUSE = TRUE;
 104   1      }
 105          
 106          void main()
 107          {
 108   1        setup();
 109   1        while(1)
 110   1        {
 111   2          loop();
 112   2        }
 113   1      }

C51 COMPILER V9.60.0.0   MAIN                                                              10/30/2023 16:56:50 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    242    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
